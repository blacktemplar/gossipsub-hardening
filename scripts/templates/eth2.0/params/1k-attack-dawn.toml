COMPOSITION_NAME = "baseline"

# the set of go build tags to apply when building.
# set this to an empty array if you want to target a commit before gossipsub v1.1 was merged.
BUILD_SELECTORS = ['hardened_api']

RUN_CONFIG = "log_level=\"debug\""

# version of go-libp2p-pubsub to use when building the test plan
GS_VERSION = "latest"

# time to run simulation (after warmup) (>2 epochs)
T_RUN = "13m"

# time to wait after subscribing to topics before publishing
T_WARM = "30s"

T_COOL = "30s"

# total number of nodes in simulation
N_NODES = 1250

# number of nodes that are attackers
N_ATTACK_NODES = 250

N_ATTACK_PEERS_PER_NODE = 16

# type of attack node
ATTACK_NODE_TYPE = "sybil"

ATTACK_DEGREE = 20

ATTACK_SINGLE_NODE = false

ATTACKER_CONNECT_DELAYS = "0s"

# number of honest (non-attack) nodes that are publishers
# the remaining honest nodes will lurk in their topics without
# publishing
N_PUBLISHER = 100

# how often to dump peer score values
T_SCORE_INSPECT_PERIOD = '5s'

T_HEARTBEAT = '700ms'

VALIDATE_QUEUE_SIZE = 1024
OUTBOUND_QUEUE_SIZE = 128
T_SCORE_INSPECT_PERIOD = '5s'

FLOOD_PUBLISHING = "true"

T_LATENCY = '25ms'

HONEST_CONNECT_DELAYS = '10s'


# TOPIC_CONFIG controls which topics will be joined.
# The n_messages and message_size params are only relevant to publisher
# nodes.
#
# The message delivery rate is derived from the runtime, with each
# publisher attempting to deliver n_messages at a uniform rate througout
# t_run.
#
# Right now we use one TOPIC_CONFIG for all groups in the composition,
# but there's no reason you coudn't give each group its own config,
# for example to have peers publishing at different rates to the
# same topic.
TOPIC_CONFIG = [
   { id = 'beacon_block', message_rate = "1/12s", message_size = '123 KiB' },
   { id = 'beacon_aggregate_proof', message_rate = "112/12s", message_size = '680 B' }, # assuming ~30000 validators => 7 committees per slot 7 * 16 = 112
   { id = 'voluntary_exit', message_rate = "1/h", message_size = '112 B' },
   { id = 'proposer_slashing', message_rate = "1/24h", message_size = '400 B' },
   { id = 'attester_slashing', message_rate = "1/24h", message_size = '33 KiB' },
]

OVERLAY_D=6
OVERLAY_DLO=5
OVERLAY_DHI=12
OVERLAY_DSCORE=5
OVERLAY_DLAZY=6

[PEER_SCORE_PARAMS]

IPColocationFactorWeight=0 # IPs not simulated here
IPColocationFactorThreshold=1
DecayInterval="12s"
DecayToZero=0.01
RetainScore="640m"

    [PEER_SCORE_PARAMS.Thresholds]
    GossipThreshold = -4000
    PublishThreshold = -8000
    GraylistThreshold = -16000
    AcceptPXThreshold = 99999999 # No bootnodes simulated here

    [PEER_SCORE_PARAMS.Topics.beacon_block]
    TopicWeight = 0.5

    # P1
    TimeInMeshWeight = 0.0324
    TimeInMeshQuantum = "12s"
    TimeInMeshCap = 300

    # P2
    FirstMessageDeliveriesWeight = 1.0
    FirstMessageDeliveriesDecay = 0.9928
    FirstMessageDeliveriesCap = 23

    # P3
    MeshMessageDeliveriesWeight = 0 # deactivated for now
    #MeshMessageDeliveriesWeight = -0.005251
    #MeshMessageDeliveriesDecay = 0.9928
    #MeshMessageDeliveriesCap = 139
    #MeshMessageDeliveriesThreshold = 69
    #MeshMessageDeliveriesActivation = '51.2m' # 8 epochs
    #MeshMessageDeliveryWindow = '5ms'

    # P3b
    MeshFailurePenaltyWeight = 0 # deactivated for now
    #MeshFailurePenaltyWeight = -0.005251
    #MeshFailurePenaltyDecay = 0.9928

    # P4
    InvalidMessageDeliveriesWeight = -99
    InvalidMessageDeliveriesDecay = 0.9994

    [PEER_SCORE_PARAMS.Topics.beacon_aggregate_proof]
    TopicWeight = 0.5

    # P1
    TimeInMeshWeight = 0.0324
    TimeInMeshQuantum = "12s"
    TimeInMeshCap = 300

    # P2
    FirstMessageDeliveriesWeight = 0.05
    FirstMessageDeliveriesDecay = 0.631
    FirstMessageDeliveriesCap = 463

    # P3
    MeshMessageDeliveriesWeight = 0 # deactivated for now
    #MeshMessageDeliveriesWeight = -0.00108206
    #MeshMessageDeliveriesDecay = 0.631
    #MeshMessageDeliveriesCap = 304
    #MeshMessageDeliveriesThreshold = 152
    #MeshMessageDeliveriesActivation = '48s' # 4 slots
    #MeshMessageDeliveryWindow = '5ms'

    # P3b
    MeshFailurePenaltyWeight = 0 # deactivated for now
    #MeshFailurePenaltyWeight = -0.00108206
    #MeshFailurePenaltyDecay = 0.631

    # P4
    InvalidMessageDeliveriesWeight = -99
    InvalidMessageDeliveriesDecay = 0.9994

    [PEER_SCORE_PARAMS.Topics.voluntary_exit]
    TopicWeight = 0.05

    # P1
    TimeInMeshWeight = 0.0324
    TimeInMeshQuantum = "12s"
    TimeInMeshCap = 300

    # P2
    FirstMessageDeliveriesWeight = 1.533
    FirstMessageDeliveriesDecay = 0.9986
    FirstMessageDeliveriesCap = 15

    # P3
    MeshMessageDeliveriesWeight = 0

    # P3b
    MeshFailurePenaltyWeight = 0

    # P4
    InvalidMessageDeliveriesWeight = -99
    InvalidMessageDeliveriesDecay = 0.9994

    [PEER_SCORE_PARAMS.Topics.proposer_slashing]
    TopicWeight = 0.05

    # P1
    TimeInMeshWeight = 0.0324
    TimeInMeshQuantum = "12s"
    TimeInMeshCap = 300

    # P2
    FirstMessageDeliveriesWeight = 1.0
    FirstMessageDeliveriesDecay = 0.99999
    FirstMessageDeliveriesCap = 5

    # P3
    MeshMessageDeliveriesWeight = 0

    # P3b
    MeshFailurePenaltyWeight = 0

    # P4
    InvalidMessageDeliveriesWeight = -99
    InvalidMessageDeliveriesDecay = 0.9994

    [PEER_SCORE_PARAMS.Topics.attester_slashing]
    TopicWeight = 0.05

    # P1
    TimeInMeshWeight = 0.0324
    TimeInMeshQuantum = "12s"
    TimeInMeshCap = 300

    # P2
    FirstMessageDeliveriesWeight = 1.0
    FirstMessageDeliveriesDecay = 0.99999
    FirstMessageDeliveriesCap = 5

    # P3
    MeshMessageDeliveriesWeight = 0

    # P3b
    MeshFailurePenaltyWeight = 0

    # P4
    InvalidMessageDeliveriesWeight = -99
    InvalidMessageDeliveriesDecay = 0.9994
